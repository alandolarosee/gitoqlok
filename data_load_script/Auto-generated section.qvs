///$tab Auto-generated section
///$autogenerated
Set dataManagerTables = '','Airports2','Airports1';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

__cityAliasesBase:
LOAD
	Alias AS [__City],
	geoKey AS [__geoKey],
	CountryCode AS [__CityCountryCode]
FROM [lib://AttachedFiles/cityAliases.qvd]
(qvd);

__cityGeoBase:
LOAD
	geoKey AS [__geoKey],
	geoPoint AS [__GeoPoint]
FROM [lib://AttachedFiles/cityGeo.qvd]
(qvd);

__cityName2Key:
MAPPING LOAD
	__City,
	__geoKey
RESIDENT __cityAliasesBase;

__cityKey2GeoPoint:
MAPPING LOAD
	__geoKey,
	__GeoPoint
RESIDENT __cityGeoBase;

[Airports2]:
LOAD
	[ID],
	[NodeVolume]
 FROM [lib://AttachedFiles/Airports2.csv]
(txt, codepage is 28591, embedded labels, delimiter is ',', msq);

[Airports1]:
LOAD
	[ID],
	[Name],
	[LinkTo],
	[Group],
	[Volume],
	APPLYMAP( '__cityKey2GeoPoint', APPLYMAP( '__cityName2Key', LOWER([Name])), '-') AS [Airports1.Name_GeoInfo]
 FROM [lib://AttachedFiles/Airports1.csv]
(txt, codepage is 28591, embedded labels, delimiter is ';', msq);



TAG FIELD [Name] WITH '$geoname', '$relates_Airports1.Name_GeoInfo';
TAG FIELD [Airports1.Name_GeoInfo] WITH '$geopoint', '$hidden', '$relates_Name';

DROP TABLES __cityAliasesBase, __cityGeoBase;